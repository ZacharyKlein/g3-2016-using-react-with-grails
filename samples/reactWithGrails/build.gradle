buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.moowork.gradle:gradle-node-plugin:0.13"
        classpath "org.grails.plugins:hibernate5:6.0.4"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.11.6"
        classpath "org.grails.plugins:views-gradle:1.1.2"
    }
}

version "0.1"
group "reactwithgrails"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"org.grails.grails-gsp"
apply plugin:"com.moowork.node"
apply plugin:"asset-pipeline"
apply plugin:"org.grails.plugins.views-json"

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-codecs"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-datasource"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-async"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails.plugins:cache"
    compile "org.grails:grails-plugin-gsp"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.1.2.Final"
    compile "org.hibernate:hibernate-ehcache:5.1.2.Final"
    compile "org.grails.plugins:views-json"
    compile "org.grails.plugins:views-json-templates"
    console "org.grails:grails-console"
    profile "org.grails.profiles:react:1.0.2"
    runtime "com.h2database:h2"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.11.6"
    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"
    testCompile "org.grails:grails-datastore-rest-client"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
}

bootRun {
    jvmArgs = ['-Dspring.output.ansi.enabled=always']
}

node {
    version = '6.9.1'
    download = true
}

task bundle {
    dependsOn(['npmInstall', 'npm_run_bundle'])
    group = 'build'
    description = 'Generate webpack bundle'
}

task webpack {
    dependsOn(['npmInstall', 'npm_run_webpack'])
    group = 'build'
    description = 'Run webpack in --watch mode'
}

bootRun.dependsOn(['bundle'])
assetCompile.dependsOn(['bundle'])

task mochaTest {
    dependsOn(['npmInstall', 'npm_run_test'])
    group = 'verification'
    description = 'Run the client tests'
}

task mochaTestReports {
    dependsOn(['npmInstall', 'npm_run_test-reports'])
    group = 'verification'
    description = 'Run the client tests and generate JUnit reports'
}

assets {
    minifyJs = true
    minifyCss = true
}
